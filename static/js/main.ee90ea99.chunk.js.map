{"version":3,"sources":["utils/API.js","components/DataGrid/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","DataTable","useState","tableData","setTableData","useEffect","a","API","get","request","data","results","fetchData","rows","map","user","push","id","login","uuid","phone","name","first","last","email","country","location","username","console","log","style","width","margin","autoHeight","sortModel","field","sort","sortingOrder","columns","headerName","headerClassName","pageSize","Header","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAMeA,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,0C,QCiFIC,EA/EG,WAChB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAmCAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,EAAIC,IAAI,yCADhC,cACQC,EADR,OAEEL,EAAaK,EAAQC,KAAKC,SAF5B,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdG,KACC,IAEH,IAAIC,EAAO,GAeX,OAbAV,EAAUW,KAAI,SAACC,GAAD,OACZF,EAAKG,KAAK,CACRC,GAAIF,EAAKG,MAAMC,KACfC,MAAOL,EAAKK,MACZC,KAAMN,EAAKM,KAAKC,MAAQ,IAAMP,EAAKM,KAAKE,KACxCC,MAAOT,EAAKS,MACZC,QAASV,EAAKW,SAASD,QACvBE,SAAUZ,EAAKG,MAAMS,cAIzBC,QAAQC,IAAIhB,GAGV,qBAAKiB,MAAO,CAAEC,MAAO,SAAUC,OAAQ,QAAvC,SACE,cAAC,IAAD,CACEC,YAAU,EACVC,UAAW,CACT,CACEC,MAAO,OACPC,KAAM,QAGVC,aAAc,CAAC,OAAQ,OACvBxB,KAAMA,EACNyB,QArEU,CACd,CACEH,MAAO,OACPI,WAAY,OACZR,MAAO,IACPS,gBAAiB,cAEnB,CACEL,MAAO,WACPI,WAAY,WACZR,MAAO,IACPS,gBAAiB,cAEnB,CACEL,MAAO,QACPI,WAAY,QACZR,MAAO,IACPS,gBAAiB,cAEnB,CACEL,MAAO,QACPI,WAAY,QACZR,MAAO,IACPS,gBAAiB,cAEnB,CACEL,MAAO,UACPI,WAAY,UACZR,MAAO,IACPS,gBAAiB,eAyCfC,SAAU,Q,OC/DHC,MAZf,WACE,OACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,oBAAIA,UAAU,YAAd,qGCMSC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee90ea99.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://randomuser.me/api/?results=25\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst DataTable = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      width: 250,\r\n      headerClassName: \"table-head\",\r\n    },\r\n    {\r\n      field: \"username\",\r\n      headerName: \"Username\",\r\n      width: 250,\r\n      headerClassName: \"table-head\",\r\n    },\r\n    {\r\n      field: \"phone\",\r\n      headerName: \"Phone\",\r\n      width: 200,\r\n      headerClassName: \"table-head\",\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      width: 300,\r\n      headerClassName: \"table-head\",\r\n    },\r\n    {\r\n      field: \"country\",\r\n      headerName: \"Country\",\r\n      width: 175,\r\n      headerClassName: \"table-head\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await API.get(\"https://randomuser.me/api/?results=25\");\r\n      setTableData(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  let rows = [];\r\n\r\n  tableData.map((user) =>\r\n    rows.push({\r\n      id: user.login.uuid,\r\n      phone: user.phone,\r\n      name: user.name.first + \" \" + user.name.last,\r\n      email: user.email,\r\n      country: user.location.country,\r\n      username: user.login.username,\r\n    })\r\n  );\r\n\r\n  console.log(rows);\r\n\r\n  return (\r\n    <div style={{ width: \"1177px\", margin: \"auto\" }}>\r\n      <DataGrid\r\n        autoHeight\r\n        sortModel={[\r\n          {\r\n            field: \"name\",\r\n            sort: \"asc\",\r\n          },\r\n        ]}\r\n        sortingOrder={[\"desc\", \"asc\"]}\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={25}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"head-top\">\r\n      <h1 className=\"header-h1\">Employee Directory</h1>\r\n      <h3 className=\"header-h2\">\r\n        Click the menu on each column to sort, filter, or hide data to narrow\r\n        your results.\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport DataTable from \"./components/DataGrid\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <DataTable></DataTable>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}